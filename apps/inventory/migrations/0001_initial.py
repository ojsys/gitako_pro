# Generated by Django 5.2.3 on 2025-06-22 23:56

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('farms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('unit_type', models.CharField(choices=[('kg', 'Kilograms'), ('g', 'Grams'), ('t', 'Tons'), ('l', 'Liters'), ('ml', 'Milliliters'), ('pcs', 'Pieces'), ('bags', 'Bags'), ('bottles', 'Bottles'), ('boxes', 'Boxes'), ('packets', 'Packets')], default='kg', max_length=20)),
                ('current_stock', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('minimum_stock', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('maximum_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('supplier', models.CharField(blank=True, max_length=200)),
                ('supplier_contact', models.CharField(blank=True, max_length=200)),
                ('expiry_tracking', models.BooleanField(default=False, help_text='Track expiry dates for this supply')),
                ('storage_location', models.CharField(blank=True, max_length=200)),
                ('storage_conditions', models.TextField(blank=True, help_text='Special storage requirements')),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Supply',
                'verbose_name_plural': 'Supplies',
                'db_table': 'inventory_supply',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SupplyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Material icon name', max_length=50)),
                ('color', models.CharField(default='#2196f3', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Supply Category',
                'verbose_name_plural': 'Supply Categories',
                'db_table': 'inventory_supplycategory',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('equipment_type', models.CharField(choices=[('machinery', 'Machinery'), ('tools', 'Tools'), ('vehicles', 'Vehicles'), ('irrigation', 'Irrigation Equipment'), ('processing', 'Processing Equipment'), ('storage', 'Storage Equipment'), ('safety', 'Safety Equipment'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('operational', 'Operational'), ('maintenance', 'Under Maintenance'), ('repair', 'Needs Repair'), ('out_of_service', 'Out of Service'), ('retired', 'Retired')], default='operational', max_length=20)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('model', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('supplier', models.CharField(blank=True, max_length=200)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('last_maintenance_date', models.DateField(blank=True, null=True)),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('maintenance_interval_days', models.PositiveIntegerField(blank=True, null=True)),
                ('operating_hours', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=8)),
                ('fuel_type', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='equipment/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_equipment', to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='farms.farm')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
                'db_table': 'inventory_equipment',
                'ordering': ['equipment_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('routine', 'Routine Maintenance'), ('repair', 'Repair'), ('inspection', 'Inspection'), ('upgrade', 'Upgrade'), ('emergency', 'Emergency Repair')], max_length=15)),
                ('date_performed', models.DateField()),
                ('description', models.TextField()),
                ('performed_by', models.CharField(help_text='Technician or service provider', max_length=200)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('parts_replaced', models.TextField(blank=True)),
                ('next_maintenance_due', models.DateField(blank=True, null=True)),
                ('service_provider', models.CharField(blank=True, max_length=200)),
                ('invoice_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='inventory.equipment')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
                'db_table': 'inventory_maintenancerecord',
                'ordering': ['-date_performed'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=100, unique=True)),
                ('supplier', models.CharField(max_length=200)),
                ('supplier_contact', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('confirmed', 'Confirmed'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='draft', max_length=15)),
                ('order_date', models.DateField(default=django.utils.timezone.now)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('terms_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='farms.farm')),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'db_table': 'inventory_purchaseorder',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer'), ('waste', 'Waste/Loss')], max_length=15)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('reference_number', models.CharField(blank=True, help_text='Purchase order, invoice number, etc.', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('supplier_vendor', models.CharField(blank=True, max_length=200)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=100)),
                ('movement_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='farms.farm')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.supply')),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'db_table': 'inventory_stockmovement',
                'ordering': ['-movement_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder')),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.supply')),
            ],
            options={
                'verbose_name': 'Purchase Order Item',
                'verbose_name_plural': 'Purchase Order Items',
                'db_table': 'inventory_purchaseorderitem',
            },
        ),
        migrations.AddField(
            model_name='supply',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='inventory.supplycategory'),
        ),
    ]
