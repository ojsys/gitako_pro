# Generated by Django 5.2.3 on 2025-06-22 23:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('farms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('activity_type', models.CharField(choices=[('land_prep', 'Land Preparation'), ('planting', 'Planting'), ('fertilizer', 'Fertilizer Application'), ('weeding', 'Weeding'), ('pest_control', 'Pest Control'), ('disease_control', 'Disease Control'), ('irrigation', 'Irrigation'), ('pruning', 'Pruning'), ('harvesting', 'Harvesting'), ('post_harvest', 'Post Harvest'), ('storage', 'Storage'), ('marketing', 'Marketing'), ('other', 'Other')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='pending', max_length=15)),
                ('scheduled_date', models.DateField()),
                ('scheduled_end_date', models.DateField(blank=True, null=True)),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('materials_needed', models.TextField(blank=True, help_text='List of materials/inputs needed')),
                ('equipment_needed', models.TextField(blank=True, help_text='List of equipment needed')),
                ('labor_hours', models.PositiveIntegerField(blank=True, help_text='Estimated labor hours', null=True)),
                ('actual_labor_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('weather_dependent', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_activities', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'db_table': 'calendar_activity',
                'ordering': ['scheduled_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='calendar.activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'db_table': 'calendar_activitylog',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CalendarTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('season_type', models.CharField(choices=[('wet', 'Wet Season'), ('dry', 'Dry Season'), ('all_year', 'All Year Round')], max_length=20)),
                ('duration_days', models.PositiveIntegerField(help_text='Total season duration in days')),
                ('is_public', models.BooleanField(default=False, help_text='Available to all users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='farms.crop')),
                ('variety', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farms.cropvariety')),
            ],
            options={
                'verbose_name': 'Calendar Template',
                'verbose_name_plural': 'Calendar Templates',
                'db_table': 'calendar_calendartemplate',
                'ordering': ['crop__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('activity_type', models.CharField(choices=[('land_prep', 'Land Preparation'), ('planting', 'Planting'), ('fertilizer', 'Fertilizer Application'), ('weeding', 'Weeding'), ('pest_control', 'Pest Control'), ('disease_control', 'Disease Control'), ('irrigation', 'Irrigation'), ('pruning', 'Pruning'), ('harvesting', 'Harvesting'), ('post_harvest', 'Post Harvest'), ('storage', 'Storage'), ('marketing', 'Marketing'), ('other', 'Other')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('days_from_start', models.PositiveIntegerField(help_text='Days from season start when this activity should occur')),
                ('duration_days', models.PositiveIntegerField(default=1, help_text='Duration of the activity in days')),
                ('estimated_cost_per_hectare', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('materials_needed', models.TextField(blank=True)),
                ('equipment_needed', models.TextField(blank=True)),
                ('labor_hours_per_hectare', models.PositiveIntegerField(blank=True, null=True)),
                ('weather_dependent', models.BooleanField(default=False)),
                ('is_critical', models.BooleanField(default=False, help_text='Critical activity that cannot be skipped')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_templates', to='calendar.calendartemplate')),
            ],
            options={
                'verbose_name': 'Activity Template',
                'verbose_name_plural': 'Activity Templates',
                'db_table': 'calendar_activitytemplate',
                'ordering': ['days_from_start'],
            },
        ),
        migrations.CreateModel(
            name='CropCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., 2024 Wet Season Maize Calendar', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('season_type', models.CharField(choices=[('wet', 'Wet Season'), ('dry', 'Dry Season'), ('all_year', 'All Year Round')], max_length=20)),
                ('season_year', models.PositiveIntegerField(default=2025)),
                ('start_date', models.DateField(help_text='Start of the farming season')),
                ('expected_end_date', models.DateField(help_text='Expected end of the farming season')),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_template', models.BooleanField(default=False, help_text='Can be used as template for future seasons')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='farms.block')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_calendars', to=settings.AUTH_USER_MODEL)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='farms.crop')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='farms.farm')),
                ('variety', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farms.cropvariety')),
            ],
            options={
                'verbose_name': 'Crop Calendar',
                'verbose_name_plural': 'Crop Calendars',
                'db_table': 'calendar_cropcalendar',
                'ordering': ['-season_year', '-start_date'],
                'unique_together': {('farm', 'block', 'crop', 'season_year', 'season_type')},
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='calendar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='calendar.cropcalendar'),
        ),
    ]
